
CREATE TABLE "Credential" (
  "idCredential" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "email" VARCHAR(100) NOT NULL UNIQUE,
  "nickname" VARCHAR(100),
  "passwordHash" VARCHAR(255) NOT NULL,
  "role" VARCHAR(50) NOT NULL CHECK ("role" IN ('attendee', 'organizer', 'admin')),
  "isActive" BOOLEAN DEFAULT TRUE,
  "isEmailVerified" BOOLEAN DEFAULT FALSE,
  "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "lastLogin" TIMESTAMP
);


CREATE TABLE "Company" (
  "idCompany" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "companyName" VARCHAR(100) NOT NULL,
  "taxId" VARCHAR(100) NOT NULL
);

CREATE TABLE "Attendee" (
  "idAttendee" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "firstName" VARCHAR(100) NOT NULL,
  "lastName" VARCHAR(100) NOT NULL,
  "middleName" VARCHAR(100),
  "idCredential" INT NOT NULL UNIQUE,
  FOREIGN KEY ("idCredential") REFERENCES "Credential" ("idCredential")
);

CREATE TABLE "Organizer" (
  "idOrganizer" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "firstName" VARCHAR(100) NOT NULL,
  "lastName" VARCHAR(100) NOT NULL,
  "middleName" VARCHAR(100),
  "idCompany" INT,
  "idCredential" INT NOT NULL UNIQUE,
  FOREIGN KEY ("idCompany") REFERENCES "Company" ("idCompany"),
  FOREIGN KEY ("idCredential") REFERENCES "Credential" ("idCredential")
);


CREATE TABLE "Reservation" (
  "idReservation" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "expiration" DATE NOT NULL,
  "startDate" DATE NOT NULL,
  "idAttendee" INT NOT NULL ,
  FOREIGN KEY ("idAttendee") REFERENCES "Attendee" ("idAttendee")
);

CREATE TABLE "PaymentMethod" (
  "idPaymentMethod" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "cvv" INT NOT NULL,
  "expirationDate" DATE NOT NULL,
  "cardHolderName" VARCHAR(100) NOT NULL,
  "cardNumber" VARCHAR(100) NOT NULL,
  "idAttendee" INT NOT NULL,
  FOREIGN KEY ("idAttendee") REFERENCES "Attendee" ("idAttendee")
);

CREATE TABLE "Payment" (
  "idPayment" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "purchaseDate" TIMESTAMP NOT NULL,
  "taxPercentage" NUMERIC(5,2) NOT NULL,
  "ticketQuantity" INT NOT NULL,
  "idPaymentMethod" INT NOT NULL,
  "idReservation" INT,
  FOREIGN KEY ("idPaymentMethod") REFERENCES "PaymentMethod" ("idPaymentMethod"),
  FOREIGN KEY ("idReservation") REFERENCES "Reservation" ("idReservation")
);


CREATE TABLE "EventLocation" (
  "idEventLocation" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "city" VARCHAR(100) NOT NULL,
  "address" VARCHAR(100) NOT NULL,
  "capacity" INT NOT NULL
);


CREATE TABLE "Event" (
  "idEvent" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "category" VARCHAR(100) NOT NULL,
  "description" VARCHAR(100) NOT NULL,
  "date" DATE NOT NULL,
  "startTime" TIME NOT NULL,
  "name" VARCHAR(100) NOT NULL,
  "idEventLocation" INT NOT NULL,
  "idCompany" INT NOT NULL,
  FOREIGN KEY ("idCompany") REFERENCES "Company" ("idCompany"),
  FOREIGN KEY ("idEventLocation") REFERENCES "EventLocation" ("idEventLocation")
);


CREATE TABLE "Seat" (
  "idSeat" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "seatNo" VARCHAR(100) NOT NULL,
  "rowNo" VARCHAR(100) NOT NULL,
  "section" VARCHAR(100) NOT NULL,
  "idEvent" INT NOT NULL,
  "idEventLocation" INT NOT NULL,
  FOREIGN KEY ("idEvent") REFERENCES "Event" ("idEvent"),
  FOREIGN KEY ("idEventLocation") REFERENCES "EventLocation" ("idEventLocation")
);


CREATE TABLE "Ticket" (
  "idTicket" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "category" VARCHAR(100) NOT NULL,
  "status" VARCHAR(100) NOT NULL,
  "date" DATE NOT NULL,
  "seatNumber" VARCHAR(100) NOT NULL,
  "unitPrice" DECIMAL(10,2) NOT NULL,
  "qrCode" BYTEA NOT NULL,
  "idSeat" INT NOT NULL,
  "idPayment" INT NOT NULL,
  FOREIGN KEY ("idSeat") REFERENCES "Seat" ("idSeat"),
  FOREIGN KEY ("idPayment") REFERENCES "Payment" ("idPayment")
);

CREATE TABLE "Refund" (
  "idRefund" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "refundStatus" VARCHAR(100) NOT NULL,
  "refundDate" TIMESTAMP NOT NULL,
  "reason" VARCHAR(100) NOT NULL,
  "idTicket" INT UNIQUE,
  FOREIGN KEY ("idTicket") REFERENCES "Ticket" ("idTicket")
);
